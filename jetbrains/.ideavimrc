set clipboard=unnamedplus,unnamed,ideaput " integrate with system clipboard
set relativenumber number

let mapleader = " "
nnoremap <leader><leader> :action GotoFile<CR>
nnoremap <leader>/ :action ActivateTerminalToolWindow<CR>
nnoremap H :action PreviousTab<CR>
nnoremap L :action NextTab<CR>

" make Y behave like D and C, yanking till end of line
map Y y$

" vim settings
set scrolloff=5
set history=1000

" status bar
set showmode

" leader
map <space> <nop>
let mapleader="\<space>"

" find and replace
set hlsearch
set incsearch
set ignorecase
set smartcase
set gdefault
nmap <leader>nh :noh<CR>

" ideavim settings
set ideajoin
set ideamarks
set idearefactormode=normal
set ideastatusicon=gray

" better HJKL
"map H ^
"map L $
"map J }
"map K {

" location
nmap <C-i> <Action>(Back)
nmap <C-o> <Action>(Forward)

" buffer (buffer < window < tab)
nmap <leader>bd <Action>(CloseContent)
nmap <leader>ba <Action>(CloseAllEditors)
nmap <leader>bo <Action>(CloseAllEditorsButActive)
nmap <leader>bP <Action>(CloseAllUnpinnedEditors)

" window
"nmap <C-Tab> <Action>(PreviousTab) " currently not useable due to keymap
"nmap <Tab> <Action>(NextTab)
nmap <leader>bp <Action>(PinActiveEditorTab)

" tab
"map <leader>sh <Action>(MoveTabLeft)
"map <leader>sj <Action>(MoveTabDown)
"map <leader>sk <Action>(MoveTabUp)
"map <leader>sl <Action>(MoveTabRight)
map <leader>sH <Action>(SplitHorizontally)
map <leader>sV <Action>(SplitVertically)

nmap <C-p> <Action>(JumpToLastWindow)
nmap <M-i> <Action>(PrevSplitter)
nmap <M-o> <Action>(NextSplitter)
nmap <C-k> <C-w>k
nmap <C-j> <C-w>j
nmap <C-h> <C-w>h
nmap <C-l> <C-w>l

nmap <leader>ww <Action>(HideAllWindows)
nmap <leader>wk <Action>(StretchSplitToTop)
nmap <leader>wj <Action>(StretchSplitToBottom)
nmap <leader>wh <Action>(StretchSplitToLeft)
nmap <leader>wl <Action>(StretchSplitToRight)
nmap <leader>wm <Action>(MaximizeEditorInSplit)
nmap <leader>wu <Action>(UnsplitAll)

" menu
nmap <leader>mm <Action>(MainMenu)
nmap <leader>ma <Action>(AnalyzeMenu)
nmap <leader>mb <Action>(BuildMenu)
nmap <leader>mc <Action>(CodeMenu)
nmap <leader>mf <Action>(FindMenuGroup)
nmap <leader>mg <Action>(GoToMenu)
nmap <leader>ms <Action>(ScopeViewPopupMenu)
nmap <leader>mt <Action>(EditorTabPopupMenu)
nmap <leader>mw <Action>(ToolWindowsGroup)

" file
nmap <leader>of <Action>(OpenFile)
nmap <leader>yp <Action>(CopyAbsolutePath)
nmap <leader>. <Action>(RecentFiles)
nmap <leader>rl <Action>(RecentLocations)
nmap <leader>rp <Action>(ManageRecentProjects) " seems overwritten
"nmap <leader>sh <Action>(LocalHistory.ShowHistory)
nmap <leader>sf <Action>(ShowFilePath)
nmap <leader>si <Action>(SelectIn)
"nmap <leader>fp <Action>(FindInPath) " more like find in files
"nmap <leader>rp <Action>(ReplaceInPath)
"nmap <leader>sw <Action>($SearchWeb) " overwritten by surround with

" tag
nmap <leader>fu <Action>(FindUsages)
nmap <leader>fs <Action>(FileStructurePopup)
nmap <leader>su <Action>(ShowUsages)
nmap <leader>hl <Action>(HighlightUsagesInFile)
nmap <leader>qp <Action>(QuickPreview)
nmap <leader>qd <Action>(QuickDefinition)
nmap <leader>qD <Action>(QuickTypeDefinition)

" code
vmap gc <Action>(CommentByLineComment)
vmap gC <Action>(CommentByBlockComment)
" lightbulb menu
nmap <leader>lb <Action>(ShowIntentionActions)
nmap <leader>se <Action>(ShowErrorDescription)
nmap <leader>om <Action>(OverrideMethods)
nmap <leader>im <Action>(ImplementMethods)
nmap <leader>fc <Action>(ReformatCode)
nmap <leader>ic <Action>(InspectCode)
nmap <leader>so <Action>(SelectAllOccurrences)
nmap <leader>gc <Action>(Generate)
nmap <leader>gt <Action>(GoToTest)

" run
nmap <leader>tcr <Action>(ContextRun)
nmap <leader>tx<Action>(chooseRunConfiguration)
nmap <leader>trr <Action>(Rerun)
nmap <leader>tr <Action>(RunTests)
nmap <leader>ts <Action>(Stop)

" debug
nmap <leader>dc <Action>(ContextDebug)
nmap <leader>dx <Action>(Debug)
nmap <leader>db <Action>(ToggleLineBreakpoint)
nmap <leader>de <Action>(EditBreakpoint)
nmap <leader>dv <Action>(ViewBreakpoints)

" refactor
nmap <leader>cr <Action>(RenameElement)
nmap <leader>re <Action>(Refactorings.QuickListPopupAction)
nmap <leader>uw <Action>(Unwrap)
nmap <leader>sw <Action>(SurroundWith)
nmap <leader>sd <Action>(SafeDelete)

" hierarchy
nmap <leader>hc <Action>(CallHierarchy)
nmap <leader>hm <Action>(MethodHierarchy)
nmap <leader>ht <Action>(TypeHierarchy)

" collapse
nmap zz <Action>(ExpandCollapseToggleAction)
nmap za <Action>(CollapseAllRegions)
nmap zA <Action>(ExpandAllRegions)

" zen
nmap <leader>z <Action>(ToggleZenMode)

" []
nmap [b <Action>(PreviousTab)
nmap ]b <Action>(NextTab)
nmap [g <Action>(GotoPreviousError)
nmap ]g <Action>(GotoNextError)
nmap [u <Action>(GotoPrevElementUnderCaretUsage)
nmap ]u <Action>(GotoNextElementUnderCaretUsage)
nmap [o <Action>(PreviousOccurence)
nmap ]o <Action>(NextOccurence)
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(JumpToLastChange)
nmap ]c <Action>(JumpToNextChange)

" goto
nmap <leader>a <Action>(GotoAction)
nmap ga <Action>(GotoAction)
nmap <leader>sc <Action>(GotoClass)
nmap <leader><leader> <Action>(GotoFile)
"nmap <leader>ss <Action>(GotoSymbol) // this does all files - FileStructurePopup is more convenient for me
nmap <leader>ss <Action>(FileStructurePopup)
nmap <leader>st <Action>(GoToTest)
nmap <leader>/ <Action>(TextSearchAction)
nmap go <Action>(GotoSuperMethod)
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(GotoTypeDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gI <Action>(QuickImplementations)
nmap gn <Action>(ShowNavBar)

" terminal
" to close the terminal, fist go back to the editor using ESC, then use leader ct
nmap <C-/> <Action>(ActivateTerminalToolWindow)
"nmap <leader><C-/> <Action>(Terminal.OpenInTerminal)
nmap <leader>ct :action HideActiveWindow<CR>

" bookmark
nmap mm <Action>(ToggleBookmark)
nmap ms <Action>(ShowBookmarks)

" todo
nmap <leader>to <Action>(ActivateTODOToolWindow)

" task
"nmap <leader>ts <Action>(tasks.goto)

" idea join
nmap \\jl <Action>(EditorJoinLines)

" gist
nmap \\cg <Action>(Github.Create.Gist)

" vcs
nmap <leader>v <Action>(VcsGroups)

" open IdeaVim settings
nmap \\v <Action>(VimActions)

" text-object (bundle plugin)
set vim-paragraph-motion
set textobj-indent
set textobj-entire
set argtextobj

" jump-motion (required idea plugin: IdeaVim-EasyMotion, AceJump)
set easymotion

" highlight yank (bundle plugin)
set highlightedyank
let g:highlightedyank_highlight_duration = "100"
let g:highlightedyank_highlight_color = "rgba(57, 197, 187, 155)"

" translation (required idea plugin: Translation)
nmap \\tt <Action>($ShowTranslationDialogAction)
nmap \\ts <Action>($TranslateTextComponent)
nmap \\ti <Action>($InclusiveTranslateAction)
nmap \\te <Action>($ExclusiveTranslateAction)

" string manipulate (required idea plugin: String Manipulation)
"nmap <leader>ss <Action>(osmedile.intellij.stringmanip.PopupChoiceAction)

" surround (bundle plugin)
" usage: https://github.com/tpope/vim-surround
set surround

" exchange (bundle plugin)
" usage: https://github.com/tommcdo/vim-exchange
set exchange

" nerdtree (bundle plugin)
set NERDTree
nmap <leader>e :NERDTreeToggle<CR>

" replace with register (bundle plugin)
" usage: https://github.com/vim-scripts/ReplaceWithRegister
set ReplaceWithRegister

" continuous shift
xnoremap < <gv
xnoremap > >gv

" alias
nmap <C-a> ggVG"+y